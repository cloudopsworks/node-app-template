##
# (c) 2024 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Pull Request Closure Cleanup
on:
  pull_request:
    types:
      - closed

concurrency: pr-close-${{ github.repository }}-${{ github.ref }}

permissions:
  contents: read
  packages: write
  statuses: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  data:
    uses: {{REPO_OWNER}}/base-app-template/.github/workflows/cd-data.yml@v5
    secrets:
      token: ${{ secrets.BOT_TOKEN_SCOPED }}

  project_data:
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.getowner.outputs.repo_name }}
    steps:
      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "owner=$repo_owner" >> $GITHUB_OUTPUT
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

  build-data:
    if: ${{ startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'feature/') }}
    needs:
      - data
      - project_data
    runs-on: ubuntu-latest
    outputs:
      has_preview: ${{ steps.has_preview.outputs.result }}
      pipeline_helm: ${{ steps.pipeline_helm.outputs.result }}
      pipeline_sonarqube: ${{ steps.disable_sonarqube.outputs.result }}
      pipeline_dtrack: ${{ steps.disable_dtrack.outputs.result }}
      pipeline_dtrack_project_type: ${{ steps.dtrack_project_type.outputs.type }}
    steps:
      # Proceed with checkout of source with all the references (depth=0)
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
          token: ${{ secrets.BOT_TOKEN }}
      # Get pipeline conf node version
      - name: Get pipeline node version
        id: node_version
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.node.version // "20"' ./.github/vars/inputs-global.yaml
      # Get pipeline conf node dist
      - name: Get pipeline node dist
        id: node_dist
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.node.dist // "adopt"' ./.github/vars/inputs-global.yaml

      # Get pipeline conf
      - name: Get pipeline preview enabled
        id: has_preview
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.preview.enabled // "false"' ./.github/vars/inputs-global.yaml

      # Get Sonarqube Configuration is disabled
      - name: Get Pipeline conf Sonarqube is Disabled
        id: disable_sonarqube
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.sonarqube.enabled // "true"' ./.github/vars/inputs-global.yaml

      # Get DependencyTrack Configuration is disabled
      - name: Get Pipeline conf DependencyTrack is Disabled
        id: disable_dtrack
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.dependencyTrack.enabled // "true"' ./.github/vars/inputs-global.yaml

      # Get DependencyTrack project type configuration, default is null
      - name: Get Pipeline conf DependencyTrack Project type
        id: dtrack_project_type
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.dependencyTrack.type // "Application"' ./.github/vars/inputs-global.yaml

      # Get pipeline conf
      - name: Get pipeline zip packaging globs
        id: zip_globs
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.zipGlobs[]' ./.github/cloudopsworks-ci.yaml

      # Get pipeline conf
      - name: Get pipeline zip packaging exclude globs
        id: exclude_globs
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.excludeGlobs[]' ./.github/cloudopsworks-ci.yaml

  preview-azure:
    needs:
      - data
      - build-data
    if: needs.data.outputs.cloud == 'AZURE' && needs.build-data.outputs.has_preview
    uses: {{REPO_OWNER}}/base-app-template/.github/workflows/preview-azure.yml@v5
    with:
      destroy: true
      semver: 0.1.0-SNAPSHOT-PR${{ github.event.pull_request.number }}-${{ github.run_number }}
      ref: ${{ github.head_ref }}
      pr_name: pr${{ github.event.pull_request.number }}
      runner_set: ${{ needs.data.outputs.runnerSet }}
      DOCKER_REGISTRY_ADDRESS: ${{ needs.data.outputs.dockerRegistry != '' && needs.data.outputs.dockerRegistry || vars.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ needs.data.outputs.helmRegistry != '' && needs.data.outputs.helmRegistry || vars.HELM_REGISTRY_ADDRESS }}
      BOT_USER: ${{ vars.BOT_USER }}
      BOT_EMAIL: ${{ vars.BOT_EMAIL }}
      TARGET_CLOUD: ${{ needs.data.outputs.cloud }}
      AZ_AKS_CLUSTER_NAME: ${{ vars.PREVIEW_AZURE_AKS_CLUSTER_NAME }}
      AZ_AKS_RESOURCE_GROUP: ${{ vars.PREVIEW_AZURE_RESOURCE_GROUP }}
      RANCHER_PROJECT_ID: ${{ vars.PREVIEW_RANCHER_PROJECT_ID }}
    secrets:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      AZURE_SERVICE_ID: ${{ secrets.PREVIEW_AZURE_SERVICE_ID }}
      AZURE_SERVICE_SECRET: ${{ secrets.PREVIEW_AZURE_SERVICE_SECRET }}
      AZ_CREDENTIALS: ${{ secrets.PREVIEW_AZURE_CREDENTIALS }}

  preview-aws:
    needs:
      - data
      - build-data
    if: needs.data.outputs.cloud == 'AWS' && needs.build-data.outputs.has_preview
    uses: {{REPO_OWNER}}/base-app-template/.github/workflows/preview-aws.yml@v5
    with:
      destroy: true
      semver: 0.1.0-SNAPSHOT-PR${{ github.event.pull_request.number }}-${{ github.run_number }}
      ref: ${{ github.head_ref }}
      pr_name: pr${{ github.event.pull_request.number }}
      runner_set: ${{ needs.data.outputs.runnerSet }}
      DOCKER_REGISTRY_ADDRESS: ${{ needs.data.outputs.dockerRegistry != '' && needs.data.outputs.dockerRegistry || vars.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ needs.data.outputs.helmRegistry != '' && needs.data.outputs.helmRegistry || vars.HELM_REGISTRY_ADDRESS }}
      BOT_USER: ${{ vars.BOT_USER }}
      BOT_EMAIL: ${{ vars.BOT_EMAIL }}
      TARGET_CLOUD: ${{ needs.data.outputs.cloud }}
      AWS_EKS_CLUSTER_NAME: ${{ vars.PREVIEW_AWS_EKS_CLUSTER_NAME }}
      AWS_REGION: ${{ vars.PREVIEW_AWS_REGION }}
      AWS_STS_ROLE_ARN: ${{ vars.PREVIEW_AWS_STS_ROLE_ARN }}
      RANCHER_PROJECT_ID: ${{ vars.PREVIEW_RANCHER_PROJECT_ID }}
    secrets:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.PREVIEW_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PREVIEW_AWS_SECRET_ACCESS_KEY }}
