##
# (c) 2022 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Code Version Extraction

on:
  workflow_call:
    inputs:
      deployment_name:
        required: true
        type: string
    secrets:
      token:
        required: true

    outputs:
      semver:
        description: "Semver Output calculated on Build"
        value: ${{ jobs.versioning.outputs.semver }}
      package_name:
        description: "Package Name Output calculated on Build"
        value: ${{ jobs.versioning.outputs.package_name }}

jobs:
  versioning:
#    environment:
#      name: ${{ inputs.deployment_name }}
    outputs:
      semver: ${{ steps.semver.outputs.version }}
      package_name: ${{ steps.package_name.outputs.result }}
    runs-on: ubuntu-latest
    steps:
      # Proceed with checkout of source with all the references (depth=0)  
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          #ref: ${{ inputs.ref }}
          token: ${{ secrets.token }}
      # Get pipeline conf node version
      - name: Get pipeline node version
        id: node_version
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.build.node.version // "18"' ./cloudopsworks-ci.yaml
      # Get pipeline conf node dist
      - name: Get pipeline node dist
        id: node_dist
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.build.node.dist // "adopt"' ./cloudopsworks-ci.yaml
      # Setup Node JS for builds with version provided
      - name: Set Node Version
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.node_version.outputs.result }}"
          check-latest: true
          token: ${{ secrets.token }}

      # Cache all NPM packages
      - name: Cache NPM packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "owner=$repo_owner" >> $GITHUB_OUTPUT
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

      # Versioning SET
      - name: Version SET
        run: make version

      - name: Version Capture
        id: semver
        run: |
          echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      # Get Package Name from package.json
      - name: Get package Name
        id: package_name
        uses: mikefarah/yq@master
        with:
          cmd: yq e -oj -r '.name' package.json
