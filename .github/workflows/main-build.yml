
##
# (c) 2021 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: NodeJS Build
on:
  # Run only on branches PUSH except when charts are modified
  push:
    branches:
      - master
    paths-ignore:
      - ".github/workflows/**"
  workflow_dispatch:
    
# Permission Settings for the entire RUN
permissions:
  actions: write
  contents: write
  issues: write
  packages: write
  statuses: write

jobs:
  new_version:
    uses: cloudopsworks/node-app-template/.github/workflows/code-tag.yml@master
    secrets:
      DOCKER_REGISTRY_ADDRESS: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}
      BOT_USER: ${{ secrets.BOT_USER }}
      BOT_EMAIL: ${{ secrets.BOT_EMAIL }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

  target_cloud:
    runs-on: ubuntu-latest
    outputs:
      registry_user: ${{ steps.acloud.outputs.registry_user }}
      registry_auth: ${{ steps.acloud.outputs.registry_auth }}
    steps:
      # - name: Install AWS Client
      #   if: ${{ secrets.TARGET_CLOUD == 'AWS' }}

      - name: Determine Cloud
        id: acloud
        run: |
          cloud="${{ secrets.TARGET_CLOUD }}"
          if [[ "$cloud" == "AWS" ]] ; then
            AWS_ACCESS_KEY_ID="${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}"
            AWS_SECRET_ACCESS_KEY="${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY  }}"
            aws_pass=`aws ecr get-login-password --region ${{ secrets.BUILD_AWS_REGION }}`
            echo "::set-output name=registry_user::AWS"
            echo "::set-output name=registry_auth::$aws_pass"
          elif [[ "$cloud" == "AZ" ]] ; then
            az_id="${{ secrets.AZURE_SERVICE_ID }}"
            az_pwd="${{ secrets.AZURE_SERVICE_SECRET }}"
            echo "::set-output name=registry_user::$az_id"
            echo "::set-output name=registry_auth::$az_pwd"
          elif [[ "$cloud" == "GCP" ]] ; then
            gcp_id="${{ secrets.GCP_SERVICE_ID }}"
            gcp_pwd="${{ secrets.GCP_SERVICE_SECRET }}"
            echo "::set-output name=registry_user::$gcp_id"
            echo "::set-output name=registry_auth::$gcp_pwd"
          fi

  build:
    needs:
      - target_cloud
      - new_version
    uses: cloudopsworks/node-app-template/.github/workflows/code-build.yml@master
    with:
      semver: ${{ needs.new_version.outputs.release_version }} 
      ref: ${{ needs.new_version.outputs.release_tag }}
    secrets:
      DOCKER_REGISTRY_ADDRESS: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}
      BOT_USER: ${{ secrets.BOT_USER }}
      BOT_EMAIL: ${{ secrets.BOT_EMAIL }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      dockerRegistryUser: ${{ needs.target_cloud.outputs.registry_user }}
      dockerRegistryPassword: ${{ needs.target_cloud.outputs.registry_auth }}
      helmRegistryUser: ${{ needs.target_cloud.outputs.registry_user }}
      helmRegistryPassword: ${{ needs.target_cloud.outputs.registry_auth }}

  release:
    needs:
      - build
      - new_version
    uses: cloudopsworks/base-app-template/.github/workflows/create-release.yml@master
    with:
      release-tag: ${{ needs.new_version.outputs.release_version }}
    secrets:
      token: ${{ secrets.BOT_TOKEN }}

  static-analysis:
    needs:
      - build
      - new_version
    uses: cloudopsworks/node-app-template/.github/workflows/static-analysis.yml@master
    with:
      ref: ${{ needs.new_version.outputs.release_tag }}
    secrets:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      sonarqubeUrl: ${{ secrets.SONARQUBE_URL }}
      sonarqubeToken: ${{ secrets.SONARQUBE_TOKEN }}

  delivery:
    needs:
      - build
      - release
      - new_version
    uses: cloudopsworks/base-app-template/.github/workflows/delivery-push.yml@master
    with:
      release_version: ${{ needs.new_version.outputs.release_version }}
    secrets:
      token: ${{ secrets.BOT_TOKEN }}

