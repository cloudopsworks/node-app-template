##
# (c) 2021 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Static Analysis Process
on:
  workflow_call:
    inputs:
#      ref:
#        required: true
#        type: string
      sonarqubeUrl:
        required: true
        type: string

    secrets:
      BOT_TOKEN:
        required: true
      sonarqubeToken:
        required: true

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      # Proceed with checkout of source with all the references (depth=0)  
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_TOKEN }}
          ref: ${{ inputs.ref }}
      # Get pipeline conf node version
      - name: Get pipeline node version
        id: node_version
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.build.node.version // "18"' ./cloudopsworks-ci.yaml
      # Get pipeline conf node dist
      - name: Get pipeline node dist
        id: node_dist
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.build.node.dist // "adopt"' ./cloudopsworks-ci.yaml
      # Setup Node JS for builds with version provided
      - name: Set Node Version
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.node_version.outputs.result }}"
          check-latest: true
          token: ${{ secrets.BOT_TOKEN }}
      # Cache all NPM packages
      - name: Cache NPM packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # Run versioning to tag the source
      - name: Run Versioning setup
        run: make version

      # Get project name
      - name: Get project name
        id: project_name
        uses: mikefarah/yq@master
        with:
          cmd: yq e -oy '.name' ./package.json
      # Get project description
      - name: Get project description
        id: project_description
        uses: mikefarah/yq@master
        with:
          cmd: yq e -oy '.description' ./package.json
      # Create generic gulp File for process
      - name: Create gulpfile
        run: |
          cat > gulpfile.js << EOF
          var gulp = require('gulp');
          var sonarqubeScanner = require('sonarqube-scanner');
          var sonarUrl = process.env.SONARQUBE_URL
          var sonarToken = process.env.SONARQUBE_TOKEN

          gulp.task('default', function(callback) {
            sonarqubeScanner({
              serverUrl : sonarUrl,
              token : sonarToken,
              options : {
                "sonar.projectKey": "${{ steps.project_name.outputs.result }}",
                "sonar.projectName": "${{ steps.project_description.outputs.result }}"
              }
            }, callback);
          });
          EOF
      # Test the code!
      - name: Static Test Code
        env:
          SONARQUBE_URL: ${{ inputs.sonarqubeUrl }}
          SONARQUBE_TOKEN: ${{ secrets.sonarqubeToken }}
        run: |
          npm install
          npm install -D gulp
          npm install -D sonarqube-scanner
          node ./node_modules/gulp/bin/gulp.js
